// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd_2023_egzamin_s16324.Models;

namespace apbd_2023_egzamin_s16324.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20230203090911_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.Project", b =>
                {
                    b.Property<int>("IdTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTeam");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            IdTeam = 1,
                            Deadline = new DateTime(2033, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Projekt Egzamin"
                        },
                        new
                        {
                            IdTeam = 2,
                            Deadline = new DateTime(2043, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Testowy"
                        });
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.Task", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdAssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdTaskType")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTask");

                    b.HasIndex("IdTeam");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            IdTask = 1,
                            Deadline = new DateTime(2043, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "testowy opis",
                            IdAssignedTo = 1,
                            IdCreator = 1,
                            IdTaskType = 1,
                            IdTeam = 1,
                            Name = "Napisać egzamin"
                        },
                        new
                        {
                            IdTask = 2,
                            Deadline = new DateTime(2044, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "testowy opis2",
                            IdAssignedTo = 1,
                            IdCreator = 2,
                            IdTaskType = 2,
                            IdTeam = 1,
                            Name = "Wrócić do domu"
                        },
                        new
                        {
                            IdTask = 3,
                            Deadline = new DateTime(2045, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "testowy opis3",
                            IdAssignedTo = 1,
                            IdCreator = 1,
                            IdTaskType = 1,
                            IdTeam = 1,
                            Name = "Zalogować się do pracy"
                        },
                        new
                        {
                            IdTask = 4,
                            Deadline = new DateTime(2046, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "testowy opi4s",
                            IdAssignedTo = 1,
                            IdCreator = 2,
                            IdTaskType = 2,
                            IdTeam = 1,
                            Name = "Udawać żę cały czas byłam w pracy"
                        });
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.TaskType", b =>
                {
                    b.Property<int>("IdTaskType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTaskType");

                    b.ToTable("TaskType");

                    b.HasData(
                        new
                        {
                            IdTaskType = 1,
                            Name = "Zrobić"
                        },
                        new
                        {
                            IdTaskType = 2,
                            Name = "Ogarnąć"
                        });
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.TeamMember", b =>
                {
                    b.Property<int>("IdTeamMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTeamMember");

                    b.ToTable("TeamMember");

                    b.HasData(
                        new
                        {
                            IdTeamMember = 1,
                            Email = "s16324@pjwstk.edu.pl",
                            FirstName = "Jakub",
                            LastName = "Lewandowski"
                        },
                        new
                        {
                            IdTeamMember = 2,
                            Email = "basz@kot.pl",
                            FirstName = "Basz",
                            LastName = "Kot"
                        });
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.Task", b =>
                {
                    b.HasOne("apbd_2023_egzamin_s16324.Models.TaskType", "IdTaskTypeNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_2023_egzamin_s16324.Models.Project", "IdProjectNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apbd_2023_egzamin_s16324.Models.TeamMember", "IdTeamMemberNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProjectNavigation");

                    b.Navigation("IdTaskTypeNavigation");

                    b.Navigation("IdTeamMemberNavigation");
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.TaskType", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("apbd_2023_egzamin_s16324.Models.TeamMember", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
